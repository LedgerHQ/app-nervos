/* This is a *minimized* spec for just what the ledger app currently needs.
   From the git history the original version can be gotten. */

/* Basic Types */

array Uint32 [byte; 4];
array Uint64 [byte; 8];
array Uint128 [byte; 16];
array Byte32 [byte; 32];
array Uint256 [byte; 32];

vector Bytes <byte>;
option BytesOpt (Bytes);

vector BytesVec <Bytes>;
vector Byte32Vec <Byte32>;

/* Types for Chain */

table Script {
    code_hash:      Byte32,
    hash_type:      byte,
    args:           Bytes,
}

option ScriptOpt (Script);

struct OutPoint {
    tx_hash:        Byte32,
    index:          Uint32,
}

struct CellInput {
    since:           Uint64,
    previous_output: OutPoint,
}

vector CellInputVec <CellInput>;

table CellOutput {
    capacity:       Uint64,
    lock:           Script,
    type_:          ScriptOpt,
}

vector CellOutputVec <CellOutput>;

struct CellDep {
    out_point:      OutPoint,
    dep_type:       byte,
}

vector CellDepVec <CellDep>;

table RawTransaction {
    version:        Uint32,
    cell_deps:      CellDepVec,
    header_deps:    Byte32Vec,
    inputs:         CellInputVec,
    outputs:        CellOutputVec,
    outputs_data:   BytesVec,
}

table Transaction {
    raw:            RawTransaction,
    witnesses:      BytesVec,
}

table WitnessArgs {
    lock:                   BytesOpt,          // Lock args
    input_type:             BytesOpt,          // Type args for input
    output_type:            BytesOpt,          // Type args for output
}
